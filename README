# JavaScript Basics

This README covers fundamental JavaScript concepts, including variables, data types, functions, loops, math operations, and more.

---

## 1. Variables in JavaScript

JavaScript has three ways to declare variables:

var name = "John"; // Global scope
let age = 25; // Block scope
const PI = 3.1416; // Constant value
```

---

## 2. Data Types

JavaScript supports different data types:

```js
let num = 42; // Number
let text = "Hello, World!"; // String
let isTrue = true; // Boolean
let list = [1, 2, 3]; // Array
let obj = { name: "Alice", age: 30 }; // Object
let und; // Undefined
let nullable = null; // Null
```

---

## 3. Functions

### Function Declaration
```js
function greet(name) {
    return `Hello, ${name}!`;
}
console.log(greet("John"));
```

### Arrow Function
```js
const sum = (a, b) => a + b;
console.log(sum(5, 3));
```

---

## 4. Loops

### For Loop
```js
for (let i = 0; i < 5; i++) {
    console.log(i);
}
```

### While Loop
```js
let i = 0;
while (i < 5) {
    console.log(i);
    i++;
}
```

### Do-While Loop
```js
let j = 0;
do {
    console.log(j);
    j++;
} while (j < 5);
```

---

## 5. Math Operations
```js
let a = 10, b = 5;
console.log(a + b); // Addition
console.log(a - b); // Subtraction
console.log(a * b); // Multiplication
console.log(a / b); // Division
console.log(a % b); // Modulus
console.log(a ** b); // Exponentiation
```

---

## 6. Comparison and Logical Operators

### Comparison Operators
```js
console.log(5 == "5");  // true (loose equality)
console.log(5 === "5"); // false (strict equality)
console.log(10 > 5);    // true
console.log(10 >= 10);  // true
console.log(5 < 3);     // false
console.log(5 <= 5);    // true
```

### Logical Operators
```js
console.log(true && false); // false (AND)
console.log(true || false); // true (OR)
console.log(!true);         // false (NOT)
```

---

## 7. Conditional Statements

### If-Else
```js
let num = 10;
if (num > 0) {
    console.log("Positive number");
} else {
    console.log("Negative number");
}
```

### Switch Case
```js
let day = 3;
switch (day) {
    case 1:
        console.log("Monday");
        break;
    case 2:
        console.log("Tuesday");
        break;
    default:
        console.log("Other day");
}
```

---

## 8. Arrays and Objects

### Array Methods
```js
let numbers = [1, 2, 3, 4, 5];
numbers.push(6); // Add to end
numbers.pop();   // Remove last element
console.log(numbers.length); // Get length
```

### Object Manipulation
```js
let person = {
    name: "Alice",
    age: 30,
};
console.log(person.name); // Access property
person.city = "New York"; // Add new property
```

---

## 9. ES6 Features

### Template Literals
```js
let name = "John";
console.log(`Hello, ${name}!`);
```

### Destructuring
```js
const user = { firstName: "Alice", lastName: "Smith" };
const { firstName, lastName } = user;
console.log(firstName, lastName);
```

### Spread Operator
```js
let arr1 = [1, 2, 3];
let arr2 = [...arr1, 4, 5];
console.log(arr2);
```

---

## 10. Promises & Async/Await

### Using Promises
```js
const myPromise = new Promise((resolve, reject) => {
    setTimeout(() => resolve("Success!"), 2000);
});

myPromise.then((message) => console.log(message));
```

### Using Async/Await
```js
async function fetchData() {
    return "Data loaded";
}
fetchData().then(console.log);
```

---

## Conclusion

This README provides an overview of fundamental JavaScript concepts with examples. Keep practicing and exploring more advanced topics to strengthen your skills!

